cmake_minimum_required(VERSION 3.5)

project(Local32Amplifer LANGUAGES CXX C)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
#修改MSVC的编码
if(MSVC)
    add_compile_options("/source-charset:utf-8")
    add_compile_options("/execution-charset:utf-8")
endif()
set(Qt5_DIR "D:\\Qt\\Qt5.14.2\\5.14.2\\msvc2017_64\\lib\\cmake\\Qt5")
find_package(Qt5 COMPONENTS Core widgets Concurrent serialport  network REQUIRED)
  
#add_subdirectory(test)
if(MSVC)
    if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
        if(CMAKE_CL_64)
            set(MATINCLUDE "matio/x64/release/include")
            file(GLOB MATLIB "matio/x64/release/lib/*.lib")
            file(GLOB MATDLL "matio/x64/release/bin/*.dll")
        else()
            set(MATINCLUDE "matio/x86/release/include")
            file(GLOB MATLIB "matio/x86/release/lib/*.lib")
            file(GLOB MATDLL "matio/x86/release/bin/*.dll")
        endif()
    else()
        if(CMAKE_CL_64)
            set(MATINCLUDE "matio/x64/debug/include")
            file(GLOB MATLIB "matio/x64/debug/lib/*.lib")
            file(GLOB MATDLL "matio/x64/debug/bin/*.dll")
        else()
            set(MATINCLUDE "matio/x86/debug/include")
            file(GLOB MATLIB "matio/x86/debug/lib/*.lib")
            file(GLOB MATDLL "matio/x86/debug/bin/*.dll")
        endif()
    endif()
endif()

file(COPY ${MATDLL} DESTINATION "${CMAKE_BINARY_DIR}")  # 复制DLL到构建目录
file(GLOB src "src/*")
file(GLOB Communication "src/Communication/*")
file(GLOB Protocols "src/Protocols/*")
#add_library(${PROJECT_NAME}  ${src} ${Communication} ${Protocols})
add_library(${PROJECT_NAME}  SHARED ${src} ${Communication} ${Protocols})
target_link_libraries(${PROJECT_NAME} PRIVATE Qt5::Core Qt5::Widgets Qt5::Concurrent Qt5::SerialPort Qt5::Network ${MATLIB})


target_include_directories(${PROJECT_NAME} PUBLIC "src" ${MATINCLUDE})

